services:
  backend:
    image: todo-backend-dev
    build:
      context: ./todo-backend # The context will pick this directory as the "build context"
      dockerfile: dev.Dockerfile
    environment:
      REDIS_URL: redis://redis:6379
      MONGO_URL: mongodb://the_username:the_password@mongo:27017/the_database
    depends_on:
      - redis
      - mongo
    volumes:
      - ./todo-backend/:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    ports:
      - 3000:3000
    container_name: todo-backend-dev
  mongo:
    image: mongo
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes: 
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./todo-backend/mongo_data:/data/db
  redis:
    ports: 
      - 6379:6379
      - 8001:8001
    image: redis:latest
    command: ['redis-server', '--protected-mode', 'no', '--appendonly', 'yes']
    volumes:
      - ./todo-backend/redis_data:/data
  app:
      image: todo-front-dev
      build:
        context: ./todo-frontend # The context will pick this directory as the "build context"
        dockerfile: dev.Dockerfile # This will simply tell which dockerfile to read
      environment:
        REACT_APP_BACKEND_URL: http://localhost:3000
      volumes:
        - ./todo-frontend/:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
      ports:
        - 3001:3000
      container_name: todo-front-dev
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    depends_on:
      - app
    container_name: rev-proxy